package com.zy.report;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.HashMap;

import org.apache.http.client.ClientProtocolException;

import com.zy.report.util.EchartsUtil;
import com.zy.report.util.FreemarkerUtil;

import freemarker.template.TemplateException;
import sun.misc.BASE64Decoder;

public class App3 {
    public static void main(String[] args) throws ClientProtocolException, IOException, TemplateException {
        // 变量
    	String qs = "[[-2.9,1],[-1.3,2],[6.5,3],[11.6,4],[15.1,5],[20.2,6],[22.6,7],[24.3,8],[27,9],[26.8,10],[24.2,11],[20.3,12],[17.1,13],[12.7,14],[8.5,15],[4.7,16],[1.1,17],[-1.7,18],[-2.7,19],[-0.8,20],[2.5,21],[8.1,22],[13.7,23],[19,24],[23.2,25],[24.8,26],[25.8,27],[23.9,28],[19.3,29],[15.3,30],[10.7,31],[5.6,32],[2.3,33],[0.4,34],[1.1,35],[4.9,36],[9.1,37],[13.5,38],[17.2,39],[20.2,40],[22.4,41],[22.2,42],[21,43],[18.7,44],[14.7,45],[10,46],[6.2,47],[4.5,48],[4.2,49],[4.8,50],[5.6,51],[6.6,52],[8.2,53],[10.1,54],[11.4,55],[12.4,56],[12.7,57],[12,58],[11.6,59],[11.5,60],[11.1,61],[10.3,62],[8.9,63],[6.6,64],[4,65],[2.2,66],[0,67],[-2.1,68],[-4.1,69],[-5,70],[-3.7,71],[-2.7,72],[-2,73],[4.9,74],[12.8,75],[18.2,76],[23.1,77],[23.4,78],[15.5,79],[8.1,80],[2.2,81],[-2.5,82],[-8.7,83],[-12.3,84],[-13.5,85],[-12.3,86],[-10.5,87],[-7.8,88],[-4.2,89],[0.2,90],[4.6,91],[6.6,92],[5.6,93],[3.3,94],[-0.1,95],[-5.1,96],[-9.7,97],[-13.3,98],[-14.3,99],[-14.8,100]]";
    	String cq = "[[0,1],[0.8,2],[4,3],[8.6,4],[13.6,5],[18.1,6],[20.3,7],[20.8,8],[19.8,9],[16.4,10],[11.6,11],[6.4,12],[1.3,13],[-4.1,14],[-8.5,15],[-12.9,16],[-14.8,17],[-14.3,18],[-12.3,19],[-8.2,20],[-4,21],[-0.2,22],[3.7,23],[6.4,24],[8.3,25],[9.9,26],[10.8,27],[9.7,28],[6.8,29],[3.5,30],[1.3,31],[0,32],[-0.4,33],[0,34],[1.3,35],[3.7,36],[5.5,37],[8.5,38],[12.1,39],[14.7,40],[14.9,41],[12.6,42],[9.3,43],[5.4,44],[2.1,45],[-0.4,46],[-2.6,47],[-2.7,48],[-0.6,49],[1.9,50],[4.6,51],[6.8,52],[8.6,53],[10.1,54],[11,55],[10.7,56],[9.6,57],[8.1,58],[6.8,59],[6,60],[5.5,61],[5.3,62],[5.2,63],[5.5,64],[6.2,65],[7,66],[7.9,67],[9,68],[10,69],[11.1,70],[12.1,71],[13.2,72],[14.2,73],[14.3,74],[13.8,75],[10.6,76],[5,77],[-1.4,78],[-6.1,79],[-7.4,80],[-6,81],[-5.6,82],[-4.2,83],[-2.5,84],[-1.3,85],[-1.2,86],[-1.2,87],[-1.7,88],[-2.5,89],[-3.6,90],[-5.9,91],[-9.5,92],[-12.3,93],[-14,94],[-16,95],[-16.8,96],[-16.4,97],[-15.3,98],[-13.9,99],[-14.4,100]]";
    	String xz = "[[0,1],[0,2],[1.2,3],[5,4],[11.6,5],[21.7,6],[35.6,7],[52.7,8],[69.6,9],[87,10],[90,11],[90,12],[90,13],[90,14],[90,15],[90,16],[90,17],[90,18],[90,19],[90,20],[90,21],[90,22],[90,23],[90,24],[90,25],[90,26],[90,27],[90,28],[90,29],[90,30],[90,31],[90,32],[90,33],[90,34],[90,35],[90,36],[90,37],[90,38],[90,39],[90,40],[90,41],[90,42],[90,43],[90,44],[90,45],[90,46],[90,47],[90,48],[90,49],[90,50],[90,51],[90,52],[90,53],[90,54],[90,55],[90,56],[90,57],[90,58],[90,59],[90,60],[90,61],[90,62],[90,63],[90,64],[90,65],[90,66],[90,67],[90,68],[90,69],[90,70],[90,71],[90,72],[90,73],[90,74],[90,75],[90,76],[90,77],[90,78],[90,79],[90,80],[90,81],[90,82],[90,83],[90,84],[90,85],[90,86],[90,87],[90,88],[90,89],[90,90],[90,91],[90,92],[90,93],[90,94],[90,95],[90,96],[90,97],[90,98],[90,99],[90,100]]";
    	
        // 模板参数
        HashMap<String, Object> datas = new HashMap<>();
        datas.put("data", qs);

        // 生成屈伸字符串
        String option = FreemarkerUtil.generateString("qs.ftl", "", datas);
        // 根据option参数
        String base64 = EchartsUtil.generateEchartsBase64(option);
        generateImage(base64, "/Users/wanglei/qs.png");
        
        
        datas.put("data", cq);

        // 生成侧屈字符串
        option = FreemarkerUtil.generateString("cq.ftl", "", datas);
        // 根据option参数
        base64 = EchartsUtil.generateEchartsBase64(option);
        generateImage(base64, "/Users/wanglei/cq.png");
        
        datas.put("data", xz);

        // 生成侧屈字符串
        option = FreemarkerUtil.generateString("xz.ftl", "", datas);
        // 根据option参数
        base64 = EchartsUtil.generateEchartsBase64(option);
        generateImage(base64, "/Users/wanglei/xz.png");
        
        
    }

    public static void generateImage(String base64, String path) throws IOException {
        BASE64Decoder decoder = new BASE64Decoder();
        try (OutputStream out = new FileOutputStream(path)){
            // 解密
            byte[] b = decoder.decodeBuffer(base64);
            for (int i = 0; i < b.length; ++i) {
                if (b[i] < 0) {
                    b[i] += 256;
                }
            }
            out.write(b);
            out.flush();
        } 
    }
}